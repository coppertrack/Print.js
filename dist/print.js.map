{"version":3,"file":"print.js","sources":["../src/js/browser.ts","../src/js/modal.ts","../src/js/functions.ts","../src/js/print.ts","../src/js/security.ts","../src/js/pdf.ts","../src/js/html.ts","../src/js/raw-html.ts","../src/js/image.ts","../src/js/json.ts","../src/js/init.ts","../src/index.ts"],"sourcesContent":["import type { PrintParams } from \"../types\"\nconst Browser = {\n  // Firefox 1.0+\n  isFirefox: () => {\n    return typeof InstallTrigger !== 'undefined'\n  },\n  getFirefoxMajorVersion: (userAgent) => {\n    userAgent = userAgent || navigator.userAgent\n    const firefoxVersionRegex = /firefox\\/(\\S+)/\n    const match = userAgent.toLowerCase().match(firefoxVersionRegex)\n    if (match) {\n      return match[1].split('.').map(x => parseInt(x))[0]\n    }\n  },\n  // Internet Explorer 6-11\n  isIE: () => {\n    return navigator.userAgent.indexOf('MSIE') !== -1 || !!document.documentMode\n  },\n  // Edge 20+\n  isEdge: () => {\n    return !Browser.isIE() && !!window.StyleMedia\n  },\n  // Chrome 1+\n  isChrome: (context = window) => {\n    return !!context.chrome\n  },\n  // At least Safari 3+: \"[object HTMLElementConstructor]\"\n  isSafari: () => {\n    return Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor') > 0 ||\n        navigator.userAgent.toLowerCase().indexOf('safari') !== -1\n  },\n  // IOS Chrome\n  isIOSChrome: () => {\n    return navigator.userAgent.toLowerCase().indexOf('crios') !== -1\n  }\n}\n\nexport default Browser\n","import type { PrintParams } from \"../types\"\nconst Modal = {\n  show (params) {\n    // Build modal\n    const modalStyle = 'font-family:sans-serif; ' +\n        'display:table; ' +\n        'text-align:center; ' +\n        'font-weight:300; ' +\n        'font-size:30px; ' +\n        'left:0; top:0;' +\n        'position:fixed; ' +\n        'z-index: 9990;' +\n        'color: #0460B5; ' +\n        'width: 100%; ' +\n        'height: 100%; ' +\n        'background-color:rgba(255,255,255,.9);' +\n        'transition: opacity .3s ease;'\n\n    // Create wrapper\n    const printModal = document.createElement('div')\n    printModal.setAttribute('style', modalStyle)\n    printModal.setAttribute('id', 'printJS-Modal')\n\n    // Create content div\n    const contentDiv = document.createElement('div')\n    contentDiv.setAttribute('style', 'display:table-cell; vertical-align:middle; padding-bottom:100px;')\n\n    // Add close button (requires print.css)\n    const closeButton = document.createElement('div')\n    closeButton.setAttribute('class', 'printClose')\n    closeButton.setAttribute('id', 'printClose')\n    contentDiv.appendChild(closeButton)\n\n    // Add spinner (requires print.css)\n    const spinner = document.createElement('span')\n    spinner.setAttribute('class', 'printSpinner')\n    contentDiv.appendChild(spinner)\n\n    // Add message\n    const messageNode = document.createTextNode(params.modalMessage)\n    contentDiv.appendChild(messageNode)\n\n    // Add contentDiv to printModal\n    printModal.appendChild(contentDiv)\n\n    // Append print modal element to document body\n    document.getElementsByTagName('body')[0].appendChild(printModal)\n\n    // Add event listener to close button\n    document.getElementById('printClose').addEventListener('click', function () {\n      Modal.close()\n    })\n  },\n  close () {\n    const printModal = document.getElementById('printJS-Modal')\n\n    if (printModal) {\n      printModal.parentNode.removeChild(printModal)\n    }\n  }\n}\n\nexport default Modal\n","import type { PrintParams } from \"../types\"\nimport Modal from './modal'\nimport Browser from './browser'\n\nexport function addWrapper (htmlData, params) {\n  const bodyStyle = 'font-family:' + params.font + ' !important; font-size: ' + params.font_size + ' !important; width:100%;'\n  return '<div style=\"' + bodyStyle + '\">' + htmlData + '</div>'\n}\n\nexport function capitalizePrint (obj) {\n  return obj.charAt(0).toUpperCase() + obj.slice(1)\n}\n\nexport function collectStyles (element, params) {\n  const win = document.defaultView || window\n\n  // String variable to hold styling for each element\n  let elementStyle = ''\n\n  // Loop over computed styles\n  const styles = win.getComputedStyle(element, '')\n\n  for (let key = 0; key < styles.length; key++) {\n    // Check if style should be processed\n    if (params.targetStyles.indexOf('*') !== -1 || params.targetStyle.indexOf(styles[key]) !== -1 || targetStylesMatch(params.targetStyles, styles[key])) {\n      if (styles.getPropertyValue(styles[key])) elementStyle += styles[key] + ':' + styles.getPropertyValue(styles[key]) + ';'\n    }\n  }\n\n  // Print friendly defaults (deprecated)\n  elementStyle += 'max-width: ' + params.maxWidth + 'px !important; font-size: ' + params.font_size + ' !important;'\n\n  return elementStyle\n}\n\nfunction targetStylesMatch (styles, value) {\n  for (let i = 0; i < styles.length; i++) {\n    if (typeof value === 'object' && value.indexOf(styles[i]) !== -1) return true\n  }\n  return false\n}\n\nexport function addHeader (printElement, params) {\n  // Create the header container div\n  const headerContainer = document.createElement('div')\n\n  // Check if the header is text or raw html\n  if (isRawHTML(params.header)) {\n    headerContainer.innerHTML = params.header\n  } else {\n    // Create header element\n    const headerElement = document.createElement('h1')\n\n    // Create header text node\n    const headerNode = document.createTextNode(params.header)\n\n    // Build and style\n    headerElement.appendChild(headerNode)\n    headerElement.setAttribute('style', params.headerStyle)\n    headerContainer.appendChild(headerElement)\n  }\n\n  printElement.insertBefore(headerContainer, printElement.childNodes[0])\n}\n\nexport function addFooter (printElement, params) {\n  // Create the footer container div\n  const footerContainer = document.createElement('div')\n\n  // Check if the footer is text or raw html\n  if (isRawHTML(params.footer)) {\n    footerContainer.innerHTML = params.footer\n  } else {\n    // Create footer element\n    const footerElement = document.createElement('h1')\n\n    // Create footer text node\n    const footerNode = document.createTextNode(params.footer)\n\n    // Build and style\n    footerElement.appendChild(footerNode)\n    footerElement.setAttribute('style', params.footerStyle)\n    footerContainer.appendChild(footerElement)\n  }\n\n  printElement.insertBefore(footerContainer, printElement.childNodes.lastChild)\n}\n\nexport function cleanUp (params) {\n  // If we are showing a feedback message to user, remove it\n  if (params.showModal) Modal.close()\n\n  // Check for a finished loading hook function\n  if (params.onLoadingEnd) params.onLoadingEnd()\n\n  // If preloading pdf files, clean blob url\n  if (params.showModal || params.onLoadingStart) window.URL.revokeObjectURL(params.printable)\n\n  // Run onPrintDialogClose callback\n  let event = 'mouseover'\n\n  if (Browser.isChrome() || Browser.isFirefox()) {\n    // Ps.: Firefox will require an extra click in the document to fire the focus event.\n    event = 'focus'\n  }\n\n  const handler = () => {\n    // Make sure the event only happens once.\n    window.removeEventListener(event, handler)\n\n    params.onPrintDialogClose()\n\n    // Remove iframe from the DOM\n    const iframe = document.getElementById(params.frameId)\n\n    if (iframe) {\n      if (params.frameRemoveDelay) {\n        setTimeout(() => {\n          iframe.remove()\n        },\n        params.frameRemoveDelay\n        )\n      } else {\n        iframe.remove()\n      }\n    }\n  }\n\n  window.addEventListener(event, handler)\n}\n\nexport function isRawHTML (raw) {\n  const regexHtml = /<([A-Za-z][A-Za-z0-9]*)\\b[^>]*>(.*?)<\\/\\1>/\n  return regexHtml.test(raw)\n}\n","import type { PrintParams } from \"../types\"\nimport Browser from './browser'\nimport { cleanUp } from './functions'\n\nconst Print = {\n  send: (params: PrintParams, printFrame: HTMLIFrameElement) => {\n    // Append iframe element to document body\n    document.getElementsByTagName('body')[0].appendChild(printFrame)\n\n    // Get iframe element\n    const iframeElement = document.getElementById(params.frameId) as HTMLIFrameElement\n\n    // Wait for iframe to load all content\n    iframeElement.onload = () => {\n      if (params.type === 'pdf') {\n        // Add a delay for Firefox and Safari to allow contentWindow to be ready\n        if ((Browser.isFirefox() && Browser.getFirefoxMajorVersion(navigator.userAgent) < 110) || Browser.isSafari()) {\n          setTimeout(() => performPrint(iframeElement, params), 500)\n        } else {\n          performPrint(iframeElement, params)\n        }\n        return\n      }\n\n      // Get iframe element document\n      let printDocument = ((iframeElement as HTMLIFrameElement).contentWindow || (iframeElement as any).contentDocument)\n      if (printDocument.document) printDocument = printDocument.document\n\n      // Append printable element to the iframe body\n      printDocument.body.appendChild(params.printableElement)\n\n      // Add custom style\n      if (params.style) {\n        // Create style element\n        const style = document.createElement('style')\n        style.innerHTML = params.style\n\n        // Append style element to iframe's head\n        printDocument.head.appendChild(style)\n      }\n\n      // If printing images, wait for them to load inside the iframe\n      const images = printDocument.getElementsByTagName('img')\n\n      if (images.length > 0) {\n        loadIframeImages(Array.from(images)).then(() => performPrint(iframeElement, params))\n      } else {\n        performPrint(iframeElement, params)\n      }\n    }\n  }\n}\n\nfunction performPrint (iframeElement: HTMLIFrameElement, params: PrintParams) {\n  try {\n    iframeElement.focus()\n\n    if (!iframeElement.contentWindow) {\n      throw new Error('iframe contentWindow is not accessible')\n    }\n\n    // If Edge or IE, try catch with execCommand\n    if (Browser.isEdge() || Browser.isIE()) {\n      try {\n        iframeElement.contentWindow.document.execCommand('print', false, null)\n      } catch (e) {\n        setTimeout(function () {\n          if (iframeElement.contentWindow) {\n            iframeElement.contentWindow.print()\n          }\n        }, 1000)\n      }\n    } else {\n      // Other browsers\n      setTimeout(function () {\n        if (iframeElement.contentWindow) {\n          iframeElement.contentWindow.print()\n        }\n      }, 1000)\n    }\n  } catch (error) {\n    params.onError(error as Error)\n  } finally {\n    if ((Browser.isFirefox() && Browser.getFirefoxMajorVersion(navigator.userAgent) < 110) || Browser.isSafari()) {\n      // Move the iframe element off-screen and make it invisible\n      iframeElement.style.visibility = 'hidden'\n      iframeElement.style.left = '-1px'\n    }\n\n    cleanUp(params)\n  }\n}\n\nfunction loadIframeImages (images: HTMLImageElement[]) {\n  const promises = images.map(image => {\n    if (image.src && image.src !== window.location.href) {\n      return loadIframeImage(image)\n    }\n    return Promise.resolve()\n  })\n\n  return Promise.all(promises)\n}\n\nfunction loadIframeImage (image: HTMLImageElement) {\n  return new Promise<void>(resolve => {\n    const pollImage = () => {\n      !image || typeof image.naturalWidth === 'undefined' || image.naturalWidth === 0 || !image.complete\n        ? setTimeout(pollImage, 500)\n        : resolve()\n    }\n    pollImage()\n  })\n}\n\nexport default Print\n","/**\n * Security utilities for validating and sanitizing inputs\n */\n\nconst ALLOWED_PROTOCOLS = ['http:', 'https:', 'blob:', 'data:application/pdf']\n\n/**\n * Validates if a URL uses an allowed protocol\n * @param url - The URL to validate\n * @returns true if the URL is safe, false otherwise\n */\nexport function isValidUrl (url: string | null): boolean {\n  if (!url || typeof url !== 'string') {\n    return false\n  }\n\n  // Trim whitespace\n  const trimmedUrl = url.trim()\n\n  // Reject empty strings\n  if (trimmedUrl === '') {\n    return false\n  }\n\n  // Reject protocol-relative URLs (//evil.com)\n  if (trimmedUrl.startsWith('//')) {\n    return false\n  }\n\n  // Try to parse as URL\n  try {\n    const urlObj = new URL(trimmedUrl, window.location.origin)\n\n    // Check if protocol is in allowed list\n    if (ALLOWED_PROTOCOLS.includes(urlObj.protocol)) {\n      return true\n    }\n\n    // Special case for data URLs - only allow PDF\n    if (urlObj.protocol === 'data:') {\n      return trimmedUrl.toLowerCase().startsWith('data:application/pdf')\n    }\n\n    return false\n  } catch (e) {\n    // If URL parsing fails, treat as relative path\n    // Relative paths are safe if they don't contain protocol\n    if (trimmedUrl.includes(':')) {\n      // Contains colon but isn't a valid URL - likely dangerous protocol\n      return false\n    }\n\n    // Relative path without protocol is safe\n    return true\n  }\n}\n\n/**\n * Validates if a URL is safe to open in a new window\n * More restrictive than isValidUrl - only allows http(s) and data:application/pdf\n * @param url - The URL to validate\n * @returns true if safe to open, false otherwise\n */\nexport function isSafeUrlForWindow (url: string | null): boolean {\n  if (!url || typeof url !== 'string') {\n    return false\n  }\n\n  const trimmedUrl = url.trim()\n\n  if (trimmedUrl === '') {\n    return false\n  }\n\n  // Reject protocol-relative URLs\n  if (trimmedUrl.startsWith('//')) {\n    return false\n  }\n\n  try {\n    const urlObj = new URL(trimmedUrl, window.location.origin)\n\n    // Only allow http, https, and data:application/pdf for window.open\n    if (urlObj.protocol === 'http:' || urlObj.protocol === 'https:') {\n      return true\n    }\n\n    if (urlObj.protocol === 'data:') {\n      return trimmedUrl.toLowerCase().startsWith('data:application/pdf')\n    }\n\n    return false\n  } catch (e) {\n    // Invalid URL\n    return false\n  }\n}\n\n/**\n * Validates if a CSS file path is safe\n * @param path - The CSS file path to validate\n * @returns true if safe, false otherwise\n */\nexport function isValidCssPath (path: string | null): boolean {\n  if (!path || typeof path !== 'string') {\n    return false\n  }\n\n  const trimmedPath = path.trim()\n\n  if (trimmedPath === '') {\n    return false\n  }\n\n  // Reject protocol-relative URLs\n  if (trimmedPath.startsWith('//')) {\n    return false\n  }\n\n  // Reject javascript: and other dangerous protocols\n  if (trimmedPath.match(/^(javascript|data|vbscript|file):/i)) {\n    return false\n  }\n\n  // Allow http(s) URLs and relative paths\n  try {\n    const urlObj = new URL(trimmedPath, window.location.origin)\n    return urlObj.protocol === 'http:' || urlObj.protocol === 'https:'\n  } catch (e) {\n    // Relative path - validate it doesn't contain dangerous patterns\n    return !trimmedPath.includes('<') && !trimmedPath.includes('>')\n  }\n}\n","import type { PrintParams } from \"../types\"\nimport Print from './print'\nimport { cleanUp } from './functions'\nimport { isValidUrl } from './security'\n\nexport default {\n  print: (params: PrintParams, printFrame: HTMLIFrameElement) => {\n    // Check if we have base64 data\n    if (params.base64) {\n      const printableStr = params.printable as string\n      if (printableStr.indexOf(',') !== -1) {\n        // If pdf base64 start with `data:application/pdf;base64,`,Excute the atob function will throw an error.So we get the content after `,`\n        params.printable = printableStr.split(',')[1]\n      }\n      const bytesArray = Uint8Array.from(atob(params.printable as string), c => c.charCodeAt(0))\n      createBlobAndPrint(params, printFrame, bytesArray)\n      return\n    }\n\n    // Format pdf url\n    const printableStr = params.printable as string\n\n    // Validate URL before using it\n    if (!isValidUrl(printableStr)) {\n      cleanUp(params)\n      params.onError(new Error('Invalid or unsafe URL provided for printable PDF'))\n      return\n    }\n\n    params.printable = /^(blob:|https?:)/i.test(printableStr)\n      ? printableStr\n      : window.location.origin + (printableStr.charAt(0) !== '/' ? '/' + printableStr : printableStr)\n\n    // Get the file through a http request (Preload)\n    const req = new window.XMLHttpRequest()\n    req.responseType = 'arraybuffer'\n\n    req.addEventListener('error', () => {\n      cleanUp(params)\n      params.onError(new Error(req.statusText))\n\n      // Since we don't have a pdf document available, we will stop the print job\n    })\n\n    req.addEventListener('load', () => {\n      // Check for errors\n      if ([200, 201].indexOf(req.status) === -1) {\n        cleanUp(params)\n        params.onError(new Error(req.statusText))\n\n        // Since we don't have a pdf document available, we will stop the print job\n        return\n      }\n\n      // Print requested document\n      createBlobAndPrint(params, printFrame, req.response)\n    })\n\n    req.open('GET', params.printable as string, true)\n    req.send()\n  }\n}\n\nfunction createBlobAndPrint (params: PrintParams, printFrame: HTMLIFrameElement, data: ArrayBuffer | Uint8Array) {\n  // Pass response or base64 data to a blob and create a local object url\n  const pdfBlob = new window.Blob([data as BlobPart], { type: 'application/pdf' })\n  const localPdfUrl = window.URL.createObjectURL(pdfBlob)\n\n  // Set iframe src with pdf document url\n  printFrame.setAttribute('src', localPdfUrl)\n\n  Print.send(params, printFrame)\n}\n","import type { PrintParams } from \"../types\"\nimport { collectStyles, addHeader, addFooter } from './functions'\nimport Print from './print'\n\nexport default {\n  print: (params: PrintParams, printFrame: HTMLIFrameElement) => {\n    // Get the DOM printable element\n    const printElement = isHtmlElement(params.printable) ? params.printable : document.getElementById(params.printable as string)\n\n    // Check if the element exists\n    if (!printElement) {\n      window.console.error('Invalid HTML element id: ' + params.printable)\n      return\n    }\n\n    // Clone the target element including its children (if available)\n    params.printableElement = cloneElement(printElement, params)\n\n    // Add header\n    if (params.header) {\n      addHeader(params.printableElement, params)\n    }\n\n    // Add footer\n    if (params.footer) {\n      addFooter(params.printableElement, params)\n    }\n\n    // Print html element contents\n    Print.send(params, printFrame)\n  }\n}\n\nfunction cloneElement (element, params) {\n  // Clone the main node (if not already inside the recursion process)\n  const clone = element.cloneNode()\n\n  // Loop over and process the children elements / nodes (including text nodes)\n  const childNodesArray = Array.prototype.slice.call(element.childNodes)\n  for (let i = 0; i < childNodesArray.length; i++) {\n    // Check if we are skipping the current element\n    if (params.ignoreElements.indexOf(childNodesArray[i].id) !== -1) {\n      continue\n    }\n\n    // Clone the child element\n    const clonedChild = cloneElement(childNodesArray[i], params)\n\n    // Attach the cloned child to the cloned parent node\n    clone.appendChild(clonedChild)\n  }\n\n  // Get all styling for print element (for nodes of type element only)\n  if (params.scanStyles && element.nodeType === 1) {\n    clone.setAttribute('style', collectStyles(element, params))\n  }\n\n  // Check if the element needs any state processing (copy user input data)\n  switch (element.tagName) {\n    case 'SELECT':\n      // Copy the current selection value to its clone\n      clone.value = element.value\n      break\n    case 'CANVAS':\n      // Copy the canvas content to its clone\n      clone.getContext('2d').drawImage(element, 0, 0)\n      break\n  }\n\n  return clone\n}\n\nfunction isHtmlElement (printable) {\n  return typeof printable === 'object' && printable && (printable.nodeType === 1)\n}\n","import type { PrintParams } from \"../types\"\nimport Print from './print'\nimport { addHeader, addFooter } from './functions'\n\nexport default {\n  print: (params, printFrame) => {\n    // Create printable element (container)\n    params.printableElement = document.createElement('div')\n    params.printableElement.setAttribute('style', 'width:100%')\n\n    // Set our raw html as the printable element inner html content\n    params.printableElement.innerHTML = params.printable\n\n    // Add header\n    if (params.header) {\n      addHeader(params.printableElement, params)\n    }\n\n    // Add footer\n    if (params.footer) {\n      addFooter(params.printableElement, params)\n    }\n\n    // Print html contents\n    Print.send(params, printFrame)\n  }\n}\n","import type { PrintParams } from \"../types\"\nimport { addHeader, addFooter } from './functions'\nimport Print from './print'\nimport Browser from './browser'\n\nexport default {\n  print: (params, printFrame) => {\n    // Check if we are printing one image or multiple images\n    if (params.printable.constructor !== Array) {\n      // Create array with one image\n      params.printable = [params.printable]\n    }\n\n    // Create printable element (container)\n    params.printableElement = document.createElement('div')\n\n    // Create all image elements and append them to the printable container\n    params.printable.forEach(src => {\n      // Create the image element\n      const img = document.createElement('img')\n      img.setAttribute('style', params.imageStyle)\n\n      // Set image src with the file url\n      img.src = src\n\n      // The following block is for Firefox, which for some reason requires the image's src to be fully qualified in\n      // order to print it\n      if (Browser.isFirefox()) {\n        const fullyQualifiedSrc = img.src\n        img.src = fullyQualifiedSrc\n      }\n\n      // Create the image wrapper\n      const imageWrapper = document.createElement('div')\n\n      // Append image to the wrapper element\n      imageWrapper.appendChild(img)\n\n      // Append wrapper to the printable element\n      params.printableElement.appendChild(imageWrapper)\n    })\n\n    // Check if we are adding a print header\n    if (params.header) addHeader(params.printableElement, params)\n\n    // Check if we are adding a print footer\n    if (params.footer) {\n      addFooter(params.printableElement, params)\n    }\n\n    // Print image\n    Print.send(params, printFrame)\n  }\n}\n","import type { PrintParams } from \"../types\"\nimport { capitalizePrint, addHeader, addFooter } from './functions'\nimport Print from './print'\n\nexport default {\n  print: (params, printFrame) => {\n    // Check if we received proper data\n    if (typeof params.printable !== 'object') {\n      throw new Error('Invalid javascript data object (JSON).')\n    }\n\n    // Validate repeatTableHeader\n    if (typeof params.repeatTableHeader !== 'boolean') {\n      throw new Error('Invalid value for repeatTableHeader attribute (JSON).')\n    }\n\n    // Validate properties\n    if (!params.properties || !Array.isArray(params.properties)) {\n      throw new Error('Invalid properties array for your JSON data.')\n    }\n\n    // We will format the property objects to keep the JSON api compatible with older releases\n    params.properties = params.properties.map(property => {\n      return {\n        field: typeof property === 'object' ? property.field : property,\n        displayName: typeof property === 'object' ? property.displayName : property,\n        columnSize: typeof property === 'object' && property.columnSize ? property.columnSize + ';' : 100 / params.properties.length + '%;'\n      }\n    })\n\n    // Create a print container element\n    params.printableElement = document.createElement('div')\n\n    // Check if we are adding a print header\n    if (params.header) {\n      addHeader(params.printableElement, params)\n    }\n\n    // Build the printable html data\n    params.printableElement.innerHTML += jsonToHTML(params)\n\n    // Check if we are adding a print footer\n    if (params.footer) {\n      addFooter(params.printableElement, params)\n    }\n\n    // Print the json data\n    Print.send(params, printFrame)\n  }\n}\n\nfunction jsonToHTML (params) {\n  // Get the row and column data\n  const data = params.printable\n  const properties = params.properties\n\n  // Create a html table\n  let htmlData = '<table style=\"border-collapse: collapse; width: 100%;\">'\n\n  // Check if the header should be repeated\n  if (params.repeatTableHeader) {\n    htmlData += '<thead>'\n  }\n\n  // Add the table header row\n  htmlData += '<tr>'\n\n  // Add the table header columns\n  for (let a = 0; a < properties.length; a++) {\n    htmlData += '<th style=\"width:' + properties[a].columnSize + ';' + params.gridHeaderStyle + '\">' + capitalizePrint(properties[a].displayName) + '</th>'\n  }\n\n  // Add the closing tag for the table header row\n  htmlData += '</tr>'\n\n  // If the table header is marked as repeated, add the closing tag\n  if (params.repeatTableHeader) {\n    htmlData += '</thead>'\n  }\n\n  // Create the table body\n  htmlData += '<tbody>'\n\n  // Add the table data rows\n  for (let i = 0; i < data.length; i++) {\n    // Add the row starting tag\n    htmlData += '<tr>'\n\n    // Print selected properties only\n    for (let n = 0; n < properties.length; n++) {\n      let stringData = data[i]\n\n      // Support nested objects\n      const property = properties[n].field.split('.')\n      if (property.length > 1) {\n        for (let p = 0; p < property.length; p++) {\n          stringData = stringData[property[p]]\n        }\n      } else {\n        stringData = stringData[properties[n].field]\n      }\n\n      // Add the row contents and styles\n      htmlData += '<td style=\"width:' + properties[n].columnSize + params.gridStyle + '\">' + stringData + '</td>'\n    }\n\n    // Add the row closing tag\n    htmlData += '</tr>'\n  }\n\n  // Add the table and body closing tags\n  htmlData += '</tbody></table>'\n\n  return htmlData\n}\n","'use strict'\n\nimport Browser from './browser'\nimport Modal from './modal'\nimport Pdf from './pdf'\nimport Html from './html'\nimport RawHtml from './raw-html'\nimport Image from './image'\nimport Json from './json'\nimport { isSafeUrlForWindow, isValidCssPath } from './security'\nimport type { PrintParams } from '../types'\n\nconst printTypes = ['pdf', 'html', 'image', 'json', 'raw-html'] as const\n\nexport default {\n  init (args?: string | Partial<PrintParams>, type?: string) {\n    const params: PrintParams = {\n      printable: null,\n      fallbackPrintable: null,\n      type: 'pdf',\n      header: null,\n      headerStyle: 'font-weight: 300;',\n      footer: null,\n      footerStyle: 'font-weight: 300;',\n      maxWidth: 800,\n      properties: null,\n      gridHeaderStyle: 'font-weight: bold; padding: 5px; border: 1px solid #dddddd;',\n      gridStyle: 'border: 1px solid lightgray; margin-bottom: -1px;',\n      showModal: false,\n      onError: (error: Error) => { throw error },\n      onLoadingStart: null,\n      onLoadingEnd: null,\n      onPrintDialogClose: () => {},\n      onIncompatibleBrowser: () => {},\n      modalMessage: 'Retrieving Document...',\n      frameId: 'printJS',\n      frameRemoveDelay: null,\n      printableElement: null,\n      documentTitle: 'Document',\n      targetStyle: ['clear', 'display', 'width', 'min-width', 'height', 'min-height', 'max-height'],\n      targetStyles: ['border', 'box', 'break', 'text-decoration'],\n      ignoreElements: [],\n      repeatTableHeader: true,\n      css: null,\n      style: null,\n      scanStyles: true,\n      base64: false,\n\n      // Deprecated\n      onPdfOpen: null,\n      font: 'TimesNewRoman',\n      font_size: '12pt',\n      honorMarginPadding: true,\n      honorColor: false,\n      imageStyle: 'max-width: 100%;'\n    }\n\n    // Check if a printable document or object was supplied\n    if (args === undefined) {\n      throw new Error('printJS expects at least 1 attribute.')\n    }\n\n    // Process parameters\n    switch (typeof args) {\n      case 'string':\n        params.printable = encodeURI(args)\n        params.fallbackPrintable = params.printable\n        params.type = (type as PrintParams['type']) || params.type\n        break\n      case 'object':\n        params.printable = (args.printable as string | HTMLElement) || null\n        params.fallbackPrintable = typeof args.fallbackPrintable !== 'undefined' ? args.fallbackPrintable : (params.printable as string)\n        params.fallbackPrintable = params.base64 ? `data:application/pdf;base64,${params.fallbackPrintable}` : params.fallbackPrintable\n\n        Object.keys(params).forEach((k) => {\n          if (k === 'printable' || k === 'fallbackPrintable') return\n\n          const key = k as keyof PrintParams\n          if (typeof args[key] !== 'undefined') {\n            (params as any)[key] = args[key]\n          }\n        })\n        break\n      default:\n        throw new Error('Unexpected argument type! Expected \"string\" or \"object\", got ' + typeof args)\n    }\n\n    // Validate printable\n    if (!params.printable) throw new Error('Missing printable information.')\n\n    // Validate type\n    if (!params.type || typeof params.type !== 'string' || printTypes.indexOf(params.type.toLowerCase() as any) === -1) {\n      throw new Error('Invalid print type. Available types are: pdf, html, image and json.')\n    }\n\n    // Check if we are showing a feedback message to the user (useful for large files)\n    if (params.showModal) Modal.show(params)\n\n    // Check for a print start hook function\n    if (params.onLoadingStart) params.onLoadingStart()\n\n    // To prevent duplication and issues, remove any used printFrame from the DOM\n    const usedFrame = document.getElementById(params.frameId)\n\n    if (usedFrame && usedFrame.parentNode) usedFrame.parentNode.removeChild(usedFrame)\n\n    // Create a new iframe for the print job\n    const printFrame = document.createElement('iframe')\n\n    if (Browser.isFirefox()) {\n      // Set the iframe to be is visible on the page (guaranteed by fixed position) but hidden using opacity 0, because\n      // this works in Firefox. The height needs to be sufficient for some part of the document other than the PDF\n      // viewer's toolbar to be visible in the page\n      printFrame.setAttribute('style', 'width: 1px; height: 100px; position: fixed; left: 0; top: 0; opacity: 0; border-width: 0; margin: 0; padding: 0')\n    } else {\n      // Hide the iframe in other browsers\n      printFrame.setAttribute('style', 'visibility: hidden; height: 0; width: 0; position: absolute; border: 0')\n    }\n\n    // Set iframe element id\n    printFrame.setAttribute('id', params.frameId)\n\n    // For non pdf printing, pass an html document string to srcdoc (force onload callback)\n    if (params.type !== 'pdf') {\n      printFrame.srcdoc = '<html><head><title>' + params.documentTitle + '</title>'\n\n      // Attach css files\n      if (params.css) {\n        // Add support for single file\n        const cssFiles = Array.isArray(params.css) ? params.css : [params.css]\n\n        // Create link tags for each css file (with validation)\n        cssFiles.forEach(file => {\n          if (isValidCssPath(file)) {\n            printFrame.srcdoc += '<link rel=\"stylesheet\" href=\"' + file + '\">'\n          } else {\n            console.warn('Print.js: Skipping invalid CSS path:', file)\n          }\n        })\n      }\n\n      printFrame.srcdoc += '</head><body></body></html>'\n    }\n\n    // Check printable type\n    switch (params.type) {\n      case 'pdf':\n        // Check browser support for pdf and if not supported we will just open the pdf file instead\n        if (Browser.isIE()) {\n          try {\n            console.info('Print.js doesn\\'t support PDF printing in Internet Explorer.')\n\n            // Validate URL before opening\n            if (params.fallbackPrintable && isSafeUrlForWindow(params.fallbackPrintable)) {\n              const win = window.open(params.fallbackPrintable, '_blank')\n              if (win) win.focus()\n            } else if (params.fallbackPrintable) {\n              throw new Error('Invalid or unsafe URL provided for fallbackPrintable')\n            }\n\n            const onIncompatible = params.onIncompatibleBrowser\n            if (onIncompatible) onIncompatible()\n          } catch (error) {\n            params.onError(error as Error)\n          } finally {\n            // Make sure there is no loading modal opened\n            if (params.showModal) Modal.close()\n            if (params.onLoadingEnd) params.onLoadingEnd()\n          }\n        } else {\n          Pdf.print(params, printFrame)\n        }\n        break\n      case 'image':\n        Image.print(params, printFrame)\n        break\n      case 'html':\n        Html.print(params, printFrame)\n        break\n      case 'raw-html':\n        RawHtml.print(params, printFrame)\n        break\n      case 'json':\n        Json.print(params, printFrame)\n        break\n    }\n  }\n}\n","import './sass/index.scss'\nimport print from './js/init'\n\nconst printJS = print.init\n\nif (typeof window !== 'undefined') {\n  window.printJS = printJS\n}\n\nexport default printJS\n"],"names":["Browser","userAgent","firefoxVersionRegex","match","x","context","Modal","params","modalStyle","printModal","contentDiv","closeButton","spinner","messageNode","capitalizePrint","obj","collectStyles","element","win","elementStyle","styles","key","targetStylesMatch","value","i","addHeader","printElement","headerContainer","isRawHTML","headerElement","headerNode","addFooter","footerContainer","footerElement","footerNode","cleanUp","event","handler","iframe","raw","Print","printFrame","iframeElement","performPrint","printDocument","style","images","loadIframeImages","error","promises","image","loadIframeImage","resolve","pollImage","ALLOWED_PROTOCOLS","isValidUrl","url","trimmedUrl","urlObj","isSafeUrlForWindow","isValidCssPath","path","trimmedPath","Pdf","printableStr","bytesArray","c","createBlobAndPrint","req","data","pdfBlob","localPdfUrl","Html","isHtmlElement","cloneElement","clone","childNodesArray","clonedChild","printable","RawHtml","Image","src","img","fullyQualifiedSrc","imageWrapper","Json","property","jsonToHTML","properties","htmlData","a","n","stringData","p","printTypes","print","args","type","k","usedFrame","file","onIncompatible","printJS"],"mappings":"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"}