{"version":3,"file":"print.umd.cjs","sources":["../src/js/browser.ts","../src/js/modal.ts","../src/js/functions.ts","../src/js/print.ts","../src/js/security.ts","../src/js/pdf.ts","../src/js/html.ts","../src/js/raw-html.ts","../src/js/image.ts","../src/js/json.ts","../src/js/init.ts","../src/index.ts"],"sourcesContent":["import type { PrintParams } from \"../types\"\nconst Browser = {\n  // Firefox 1.0+\n  isFirefox: () => {\n    return typeof InstallTrigger !== 'undefined'\n  },\n  getFirefoxMajorVersion: (userAgent) => {\n    userAgent = userAgent || navigator.userAgent\n    const firefoxVersionRegex = /firefox\\/(\\S+)/\n    const match = userAgent.toLowerCase().match(firefoxVersionRegex)\n    if (match) {\n      return match[1].split('.').map(x => parseInt(x))[0]\n    }\n  },\n  // Internet Explorer 6-11\n  isIE: () => {\n    return navigator.userAgent.indexOf('MSIE') !== -1 || !!document.documentMode\n  },\n  // Edge 20+\n  isEdge: () => {\n    return !Browser.isIE() && !!window.StyleMedia\n  },\n  // Chrome 1+\n  isChrome: (context = window) => {\n    return !!context.chrome\n  },\n  // At least Safari 3+: \"[object HTMLElementConstructor]\"\n  isSafari: () => {\n    return Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor') > 0 ||\n        navigator.userAgent.toLowerCase().indexOf('safari') !== -1\n  },\n  // IOS Chrome\n  isIOSChrome: () => {\n    return navigator.userAgent.toLowerCase().indexOf('crios') !== -1\n  }\n}\n\nexport default Browser\n","import type { PrintParams } from \"../types\"\nconst Modal = {\n  show (params) {\n    // Build modal\n    const modalStyle = 'font-family:sans-serif; ' +\n        'display:table; ' +\n        'text-align:center; ' +\n        'font-weight:300; ' +\n        'font-size:30px; ' +\n        'left:0; top:0;' +\n        'position:fixed; ' +\n        'z-index: 9990;' +\n        'color: #0460B5; ' +\n        'width: 100%; ' +\n        'height: 100%; ' +\n        'background-color:rgba(255,255,255,.9);' +\n        'transition: opacity .3s ease;'\n\n    // Create wrapper\n    const printModal = document.createElement('div')\n    printModal.setAttribute('style', modalStyle)\n    printModal.setAttribute('id', 'printJS-Modal')\n\n    // Create content div\n    const contentDiv = document.createElement('div')\n    contentDiv.setAttribute('style', 'display:table-cell; vertical-align:middle; padding-bottom:100px;')\n\n    // Add close button (requires print.css)\n    const closeButton = document.createElement('div')\n    closeButton.setAttribute('class', 'printClose')\n    closeButton.setAttribute('id', 'printClose')\n    contentDiv.appendChild(closeButton)\n\n    // Add spinner (requires print.css)\n    const spinner = document.createElement('span')\n    spinner.setAttribute('class', 'printSpinner')\n    contentDiv.appendChild(spinner)\n\n    // Add message\n    const messageNode = document.createTextNode(params.modalMessage)\n    contentDiv.appendChild(messageNode)\n\n    // Add contentDiv to printModal\n    printModal.appendChild(contentDiv)\n\n    // Append print modal element to document body\n    document.getElementsByTagName('body')[0].appendChild(printModal)\n\n    // Add event listener to close button\n    document.getElementById('printClose').addEventListener('click', function () {\n      Modal.close()\n    })\n  },\n  close () {\n    const printModal = document.getElementById('printJS-Modal')\n\n    if (printModal) {\n      printModal.parentNode.removeChild(printModal)\n    }\n  }\n}\n\nexport default Modal\n","import type { PrintParams } from \"../types\"\nimport Modal from './modal'\nimport Browser from './browser'\n\nexport function addWrapper (htmlData, params) {\n  const bodyStyle = 'font-family:' + params.font + ' !important; font-size: ' + params.font_size + ' !important; width:100%;'\n  return '<div style=\"' + bodyStyle + '\">' + htmlData + '</div>'\n}\n\nexport function capitalizePrint (obj) {\n  return obj.charAt(0).toUpperCase() + obj.slice(1)\n}\n\nexport function collectStyles (element, params) {\n  const win = document.defaultView || window\n\n  // String variable to hold styling for each element\n  let elementStyle = ''\n\n  // Loop over computed styles\n  const styles = win.getComputedStyle(element, '')\n\n  for (let key = 0; key < styles.length; key++) {\n    // Check if style should be processed\n    if (params.targetStyles.indexOf('*') !== -1 || params.targetStyle.indexOf(styles[key]) !== -1 || targetStylesMatch(params.targetStyles, styles[key])) {\n      if (styles.getPropertyValue(styles[key])) elementStyle += styles[key] + ':' + styles.getPropertyValue(styles[key]) + ';'\n    }\n  }\n\n  // Print friendly defaults (deprecated)\n  elementStyle += 'max-width: ' + params.maxWidth + 'px !important; font-size: ' + params.font_size + ' !important;'\n\n  return elementStyle\n}\n\nfunction targetStylesMatch (styles, value) {\n  for (let i = 0; i < styles.length; i++) {\n    if (typeof value === 'object' && value.indexOf(styles[i]) !== -1) return true\n  }\n  return false\n}\n\nexport function addHeader (printElement, params) {\n  // Create the header container div\n  const headerContainer = document.createElement('div')\n\n  // Check if the header is text or raw html\n  if (isRawHTML(params.header)) {\n    headerContainer.innerHTML = params.header\n  } else {\n    // Create header element\n    const headerElement = document.createElement('h1')\n\n    // Create header text node\n    const headerNode = document.createTextNode(params.header)\n\n    // Build and style\n    headerElement.appendChild(headerNode)\n    headerElement.setAttribute('style', params.headerStyle)\n    headerContainer.appendChild(headerElement)\n  }\n\n  printElement.insertBefore(headerContainer, printElement.childNodes[0])\n}\n\nexport function addFooter (printElement, params) {\n  // Create the footer container div\n  const footerContainer = document.createElement('div')\n\n  // Check if the footer is text or raw html\n  if (isRawHTML(params.footer)) {\n    footerContainer.innerHTML = params.footer\n  } else {\n    // Create footer element\n    const footerElement = document.createElement('h1')\n\n    // Create footer text node\n    const footerNode = document.createTextNode(params.footer)\n\n    // Build and style\n    footerElement.appendChild(footerNode)\n    footerElement.setAttribute('style', params.footerStyle)\n    footerContainer.appendChild(footerElement)\n  }\n\n  printElement.insertBefore(footerContainer, printElement.childNodes.lastChild)\n}\n\nexport function cleanUp (params) {\n  // If we are showing a feedback message to user, remove it\n  if (params.showModal) Modal.close()\n\n  // Check for a finished loading hook function\n  if (params.onLoadingEnd) params.onLoadingEnd()\n\n  // If preloading pdf files, clean blob url\n  if (params.showModal || params.onLoadingStart) window.URL.revokeObjectURL(params.printable)\n\n  // Run onPrintDialogClose callback\n  let event = 'mouseover'\n\n  if (Browser.isChrome() || Browser.isFirefox()) {\n    // Ps.: Firefox will require an extra click in the document to fire the focus event.\n    event = 'focus'\n  }\n\n  const handler = () => {\n    // Make sure the event only happens once.\n    window.removeEventListener(event, handler)\n\n    params.onPrintDialogClose()\n\n    // Remove iframe from the DOM\n    const iframe = document.getElementById(params.frameId)\n\n    if (iframe) {\n      if (params.frameRemoveDelay) {\n        setTimeout(() => {\n          iframe.remove()\n        },\n        params.frameRemoveDelay\n        )\n      } else {\n        iframe.remove()\n      }\n    }\n  }\n\n  window.addEventListener(event, handler)\n}\n\nexport function isRawHTML (raw) {\n  const regexHtml = /<([A-Za-z][A-Za-z0-9]*)\\b[^>]*>(.*?)<\\/\\1>/\n  return regexHtml.test(raw)\n}\n","import type { PrintParams } from \"../types\"\nimport Browser from './browser'\nimport { cleanUp } from './functions'\n\nconst Print = {\n  send: (params: PrintParams, printFrame: HTMLIFrameElement) => {\n    // Append iframe element to document body\n    document.getElementsByTagName('body')[0].appendChild(printFrame)\n\n    // Get iframe element\n    const iframeElement = document.getElementById(params.frameId) as HTMLIFrameElement\n\n    // Wait for iframe to load all content\n    iframeElement.onload = () => {\n      if (params.type === 'pdf') {\n        // Add a delay for Firefox and Safari to allow contentWindow to be ready\n        if ((Browser.isFirefox() && Browser.getFirefoxMajorVersion(navigator.userAgent) < 110) || Browser.isSafari()) {\n          setTimeout(() => performPrint(iframeElement, params), 500)\n        } else {\n          performPrint(iframeElement, params)\n        }\n        return\n      }\n\n      // Get iframe element document\n      let printDocument = ((iframeElement as HTMLIFrameElement).contentWindow || (iframeElement as any).contentDocument)\n      if (printDocument.document) printDocument = printDocument.document\n\n      // Append printable element to the iframe body\n      printDocument.body.appendChild(params.printableElement)\n\n      // Add custom style\n      if (params.style) {\n        // Create style element\n        const style = document.createElement('style')\n        style.innerHTML = params.style\n\n        // Append style element to iframe's head\n        printDocument.head.appendChild(style)\n      }\n\n      // If printing images, wait for them to load inside the iframe\n      const images = printDocument.getElementsByTagName('img')\n\n      if (images.length > 0) {\n        loadIframeImages(Array.from(images)).then(() => performPrint(iframeElement, params))\n      } else {\n        performPrint(iframeElement, params)\n      }\n    }\n  }\n}\n\nfunction performPrint (iframeElement: HTMLIFrameElement, params: PrintParams) {\n  try {\n    iframeElement.focus()\n\n    if (!iframeElement.contentWindow) {\n      throw new Error('iframe contentWindow is not accessible')\n    }\n\n    // If Edge or IE, try catch with execCommand\n    if (Browser.isEdge() || Browser.isIE()) {\n      try {\n        iframeElement.contentWindow.document.execCommand('print', false, null)\n      } catch (e) {\n        setTimeout(function () {\n          if (iframeElement.contentWindow) {\n            iframeElement.contentWindow.print()\n          }\n        }, 1000)\n      }\n    } else {\n      // Other browsers\n      setTimeout(function () {\n        if (iframeElement.contentWindow) {\n          iframeElement.contentWindow.print()\n        }\n      }, 1000)\n    }\n  } catch (error) {\n    params.onError(error as Error)\n  } finally {\n    if ((Browser.isFirefox() && Browser.getFirefoxMajorVersion(navigator.userAgent) < 110) || Browser.isSafari()) {\n      // Move the iframe element off-screen and make it invisible\n      iframeElement.style.visibility = 'hidden'\n      iframeElement.style.left = '-1px'\n    }\n\n    cleanUp(params)\n  }\n}\n\nfunction loadIframeImages (images: HTMLImageElement[]) {\n  const promises = images.map(image => {\n    if (image.src && image.src !== window.location.href) {\n      return loadIframeImage(image)\n    }\n    return Promise.resolve()\n  })\n\n  return Promise.all(promises)\n}\n\nfunction loadIframeImage (image: HTMLImageElement) {\n  return new Promise<void>(resolve => {\n    const pollImage = () => {\n      !image || typeof image.naturalWidth === 'undefined' || image.naturalWidth === 0 || !image.complete\n        ? setTimeout(pollImage, 500)\n        : resolve()\n    }\n    pollImage()\n  })\n}\n\nexport default Print\n","/**\n * Security utilities for validating and sanitizing inputs\n */\n\nconst ALLOWED_PROTOCOLS = ['http:', 'https:', 'blob:', 'data:application/pdf']\n\n/**\n * Validates if a URL uses an allowed protocol\n * @param url - The URL to validate\n * @returns true if the URL is safe, false otherwise\n */\nexport function isValidUrl (url: string | null): boolean {\n  if (!url || typeof url !== 'string') {\n    return false\n  }\n\n  // Trim whitespace\n  const trimmedUrl = url.trim()\n\n  // Reject empty strings\n  if (trimmedUrl === '') {\n    return false\n  }\n\n  // Reject protocol-relative URLs (//evil.com)\n  if (trimmedUrl.startsWith('//')) {\n    return false\n  }\n\n  // Try to parse as URL\n  try {\n    const urlObj = new URL(trimmedUrl, window.location.origin)\n\n    // Check if protocol is in allowed list\n    if (ALLOWED_PROTOCOLS.includes(urlObj.protocol)) {\n      return true\n    }\n\n    // Special case for data URLs - only allow PDF\n    if (urlObj.protocol === 'data:') {\n      return trimmedUrl.toLowerCase().startsWith('data:application/pdf')\n    }\n\n    return false\n  } catch (e) {\n    // If URL parsing fails, treat as relative path\n    // Relative paths are safe if they don't contain protocol\n    if (trimmedUrl.includes(':')) {\n      // Contains colon but isn't a valid URL - likely dangerous protocol\n      return false\n    }\n\n    // Relative path without protocol is safe\n    return true\n  }\n}\n\n/**\n * Validates if a URL is safe to open in a new window\n * More restrictive than isValidUrl - only allows http(s) and data:application/pdf\n * @param url - The URL to validate\n * @returns true if safe to open, false otherwise\n */\nexport function isSafeUrlForWindow (url: string | null): boolean {\n  if (!url || typeof url !== 'string') {\n    return false\n  }\n\n  const trimmedUrl = url.trim()\n\n  if (trimmedUrl === '') {\n    return false\n  }\n\n  // Reject protocol-relative URLs\n  if (trimmedUrl.startsWith('//')) {\n    return false\n  }\n\n  try {\n    const urlObj = new URL(trimmedUrl, window.location.origin)\n\n    // Only allow http, https, and data:application/pdf for window.open\n    if (urlObj.protocol === 'http:' || urlObj.protocol === 'https:') {\n      return true\n    }\n\n    if (urlObj.protocol === 'data:') {\n      return trimmedUrl.toLowerCase().startsWith('data:application/pdf')\n    }\n\n    return false\n  } catch (e) {\n    // Invalid URL\n    return false\n  }\n}\n\n/**\n * Validates if a CSS file path is safe\n * @param path - The CSS file path to validate\n * @returns true if safe, false otherwise\n */\nexport function isValidCssPath (path: string | null): boolean {\n  if (!path || typeof path !== 'string') {\n    return false\n  }\n\n  const trimmedPath = path.trim()\n\n  if (trimmedPath === '') {\n    return false\n  }\n\n  // Reject protocol-relative URLs\n  if (trimmedPath.startsWith('//')) {\n    return false\n  }\n\n  // Reject javascript: and other dangerous protocols\n  if (trimmedPath.match(/^(javascript|data|vbscript|file):/i)) {\n    return false\n  }\n\n  // Allow http(s) URLs and relative paths\n  try {\n    const urlObj = new URL(trimmedPath, window.location.origin)\n    return urlObj.protocol === 'http:' || urlObj.protocol === 'https:'\n  } catch (e) {\n    // Relative path - validate it doesn't contain dangerous patterns\n    return !trimmedPath.includes('<') && !trimmedPath.includes('>')\n  }\n}\n","import type { PrintParams } from \"../types\"\nimport Print from './print'\nimport { cleanUp } from './functions'\nimport { isValidUrl } from './security'\n\nexport default {\n  print: (params: PrintParams, printFrame: HTMLIFrameElement) => {\n    // Check if we have base64 data\n    if (params.base64) {\n      const printableStr = params.printable as string\n      if (printableStr.indexOf(',') !== -1) {\n        // If pdf base64 start with `data:application/pdf;base64,`,Excute the atob function will throw an error.So we get the content after `,`\n        params.printable = printableStr.split(',')[1]\n      }\n      const bytesArray = Uint8Array.from(atob(params.printable as string), c => c.charCodeAt(0))\n      createBlobAndPrint(params, printFrame, bytesArray)\n      return\n    }\n\n    // Format pdf url\n    const printableStr = params.printable as string\n\n    // Validate URL before using it\n    if (!isValidUrl(printableStr)) {\n      cleanUp(params)\n      params.onError(new Error('Invalid or unsafe URL provided for printable PDF'))\n      return\n    }\n\n    params.printable = /^(blob:|https?:)/i.test(printableStr)\n      ? printableStr\n      : window.location.origin + (printableStr.charAt(0) !== '/' ? '/' + printableStr : printableStr)\n\n    // Get the file through a http request (Preload)\n    const req = new window.XMLHttpRequest()\n    req.responseType = 'arraybuffer'\n\n    req.addEventListener('error', () => {\n      cleanUp(params)\n      params.onError(new Error(req.statusText))\n\n      // Since we don't have a pdf document available, we will stop the print job\n    })\n\n    req.addEventListener('load', () => {\n      // Check for errors\n      if ([200, 201].indexOf(req.status) === -1) {\n        cleanUp(params)\n        params.onError(new Error(req.statusText))\n\n        // Since we don't have a pdf document available, we will stop the print job\n        return\n      }\n\n      // Print requested document\n      createBlobAndPrint(params, printFrame, req.response)\n    })\n\n    req.open('GET', params.printable as string, true)\n    req.send()\n  }\n}\n\nfunction createBlobAndPrint (params: PrintParams, printFrame: HTMLIFrameElement, data: ArrayBuffer | Uint8Array) {\n  // Pass response or base64 data to a blob and create a local object url\n  const pdfBlob = new window.Blob([data as BlobPart], { type: 'application/pdf' })\n  const localPdfUrl = window.URL.createObjectURL(pdfBlob)\n\n  // Set iframe src with pdf document url\n  printFrame.setAttribute('src', localPdfUrl)\n\n  Print.send(params, printFrame)\n}\n","import type { PrintParams } from \"../types\"\nimport { collectStyles, addHeader, addFooter } from './functions'\nimport Print from './print'\n\nexport default {\n  print: (params: PrintParams, printFrame: HTMLIFrameElement) => {\n    // Get the DOM printable element\n    const printElement = isHtmlElement(params.printable) ? params.printable : document.getElementById(params.printable as string)\n\n    // Check if the element exists\n    if (!printElement) {\n      window.console.error('Invalid HTML element id: ' + params.printable)\n      return\n    }\n\n    // Clone the target element including its children (if available)\n    params.printableElement = cloneElement(printElement, params)\n\n    // Add header\n    if (params.header) {\n      addHeader(params.printableElement, params)\n    }\n\n    // Add footer\n    if (params.footer) {\n      addFooter(params.printableElement, params)\n    }\n\n    // Print html element contents\n    Print.send(params, printFrame)\n  }\n}\n\nfunction cloneElement (element, params) {\n  // Clone the main node (if not already inside the recursion process)\n  const clone = element.cloneNode()\n\n  // Loop over and process the children elements / nodes (including text nodes)\n  const childNodesArray = Array.prototype.slice.call(element.childNodes)\n  for (let i = 0; i < childNodesArray.length; i++) {\n    // Check if we are skipping the current element\n    if (params.ignoreElements.indexOf(childNodesArray[i].id) !== -1) {\n      continue\n    }\n\n    // Clone the child element\n    const clonedChild = cloneElement(childNodesArray[i], params)\n\n    // Attach the cloned child to the cloned parent node\n    clone.appendChild(clonedChild)\n  }\n\n  // Get all styling for print element (for nodes of type element only)\n  if (params.scanStyles && element.nodeType === 1) {\n    clone.setAttribute('style', collectStyles(element, params))\n  }\n\n  // Check if the element needs any state processing (copy user input data)\n  switch (element.tagName) {\n    case 'SELECT':\n      // Copy the current selection value to its clone\n      clone.value = element.value\n      break\n    case 'CANVAS':\n      // Copy the canvas content to its clone\n      clone.getContext('2d').drawImage(element, 0, 0)\n      break\n  }\n\n  return clone\n}\n\nfunction isHtmlElement (printable) {\n  return typeof printable === 'object' && printable && (printable.nodeType === 1)\n}\n","import type { PrintParams } from \"../types\"\nimport Print from './print'\nimport { addHeader, addFooter } from './functions'\n\nexport default {\n  print: (params, printFrame) => {\n    // Create printable element (container)\n    params.printableElement = document.createElement('div')\n    params.printableElement.setAttribute('style', 'width:100%')\n\n    // Set our raw html as the printable element inner html content\n    params.printableElement.innerHTML = params.printable\n\n    // Add header\n    if (params.header) {\n      addHeader(params.printableElement, params)\n    }\n\n    // Add footer\n    if (params.footer) {\n      addFooter(params.printableElement, params)\n    }\n\n    // Print html contents\n    Print.send(params, printFrame)\n  }\n}\n","import type { PrintParams } from \"../types\"\nimport { addHeader, addFooter } from './functions'\nimport Print from './print'\nimport Browser from './browser'\n\nexport default {\n  print: (params, printFrame) => {\n    // Check if we are printing one image or multiple images\n    if (params.printable.constructor !== Array) {\n      // Create array with one image\n      params.printable = [params.printable]\n    }\n\n    // Create printable element (container)\n    params.printableElement = document.createElement('div')\n\n    // Create all image elements and append them to the printable container\n    params.printable.forEach(src => {\n      // Create the image element\n      const img = document.createElement('img')\n      img.setAttribute('style', params.imageStyle)\n\n      // Set image src with the file url\n      img.src = src\n\n      // The following block is for Firefox, which for some reason requires the image's src to be fully qualified in\n      // order to print it\n      if (Browser.isFirefox()) {\n        const fullyQualifiedSrc = img.src\n        img.src = fullyQualifiedSrc\n      }\n\n      // Create the image wrapper\n      const imageWrapper = document.createElement('div')\n\n      // Append image to the wrapper element\n      imageWrapper.appendChild(img)\n\n      // Append wrapper to the printable element\n      params.printableElement.appendChild(imageWrapper)\n    })\n\n    // Check if we are adding a print header\n    if (params.header) addHeader(params.printableElement, params)\n\n    // Check if we are adding a print footer\n    if (params.footer) {\n      addFooter(params.printableElement, params)\n    }\n\n    // Print image\n    Print.send(params, printFrame)\n  }\n}\n","import type { PrintParams } from \"../types\"\nimport { capitalizePrint, addHeader, addFooter } from './functions'\nimport Print from './print'\n\nexport default {\n  print: (params, printFrame) => {\n    // Check if we received proper data\n    if (typeof params.printable !== 'object') {\n      throw new Error('Invalid javascript data object (JSON).')\n    }\n\n    // Validate repeatTableHeader\n    if (typeof params.repeatTableHeader !== 'boolean') {\n      throw new Error('Invalid value for repeatTableHeader attribute (JSON).')\n    }\n\n    // Validate properties\n    if (!params.properties || !Array.isArray(params.properties)) {\n      throw new Error('Invalid properties array for your JSON data.')\n    }\n\n    // We will format the property objects to keep the JSON api compatible with older releases\n    params.properties = params.properties.map(property => {\n      return {\n        field: typeof property === 'object' ? property.field : property,\n        displayName: typeof property === 'object' ? property.displayName : property,\n        columnSize: typeof property === 'object' && property.columnSize ? property.columnSize + ';' : 100 / params.properties.length + '%;'\n      }\n    })\n\n    // Create a print container element\n    params.printableElement = document.createElement('div')\n\n    // Check if we are adding a print header\n    if (params.header) {\n      addHeader(params.printableElement, params)\n    }\n\n    // Build the printable html data\n    params.printableElement.innerHTML += jsonToHTML(params)\n\n    // Check if we are adding a print footer\n    if (params.footer) {\n      addFooter(params.printableElement, params)\n    }\n\n    // Print the json data\n    Print.send(params, printFrame)\n  }\n}\n\nfunction jsonToHTML (params) {\n  // Get the row and column data\n  const data = params.printable\n  const properties = params.properties\n\n  // Create a html table\n  let htmlData = '<table style=\"border-collapse: collapse; width: 100%;\">'\n\n  // Check if the header should be repeated\n  if (params.repeatTableHeader) {\n    htmlData += '<thead>'\n  }\n\n  // Add the table header row\n  htmlData += '<tr>'\n\n  // Add the table header columns\n  for (let a = 0; a < properties.length; a++) {\n    htmlData += '<th style=\"width:' + properties[a].columnSize + ';' + params.gridHeaderStyle + '\">' + capitalizePrint(properties[a].displayName) + '</th>'\n  }\n\n  // Add the closing tag for the table header row\n  htmlData += '</tr>'\n\n  // If the table header is marked as repeated, add the closing tag\n  if (params.repeatTableHeader) {\n    htmlData += '</thead>'\n  }\n\n  // Create the table body\n  htmlData += '<tbody>'\n\n  // Add the table data rows\n  for (let i = 0; i < data.length; i++) {\n    // Add the row starting tag\n    htmlData += '<tr>'\n\n    // Print selected properties only\n    for (let n = 0; n < properties.length; n++) {\n      let stringData = data[i]\n\n      // Support nested objects\n      const property = properties[n].field.split('.')\n      if (property.length > 1) {\n        for (let p = 0; p < property.length; p++) {\n          stringData = stringData[property[p]]\n        }\n      } else {\n        stringData = stringData[properties[n].field]\n      }\n\n      // Add the row contents and styles\n      htmlData += '<td style=\"width:' + properties[n].columnSize + params.gridStyle + '\">' + stringData + '</td>'\n    }\n\n    // Add the row closing tag\n    htmlData += '</tr>'\n  }\n\n  // Add the table and body closing tags\n  htmlData += '</tbody></table>'\n\n  return htmlData\n}\n","'use strict'\n\nimport Browser from './browser'\nimport Modal from './modal'\nimport Pdf from './pdf'\nimport Html from './html'\nimport RawHtml from './raw-html'\nimport Image from './image'\nimport Json from './json'\nimport { isSafeUrlForWindow, isValidCssPath } from './security'\nimport type { PrintParams } from '../types'\n\nconst printTypes = ['pdf', 'html', 'image', 'json', 'raw-html'] as const\n\nexport default {\n  init (args?: string | Partial<PrintParams>, type?: string) {\n    const params: PrintParams = {\n      printable: null,\n      fallbackPrintable: null,\n      type: 'pdf',\n      header: null,\n      headerStyle: 'font-weight: 300;',\n      footer: null,\n      footerStyle: 'font-weight: 300;',\n      maxWidth: 800,\n      properties: null,\n      gridHeaderStyle: 'font-weight: bold; padding: 5px; border: 1px solid #dddddd;',\n      gridStyle: 'border: 1px solid lightgray; margin-bottom: -1px;',\n      showModal: false,\n      onError: (error: Error) => { throw error },\n      onLoadingStart: null,\n      onLoadingEnd: null,\n      onPrintDialogClose: () => {},\n      onIncompatibleBrowser: () => {},\n      modalMessage: 'Retrieving Document...',\n      frameId: 'printJS',\n      frameRemoveDelay: null,\n      printableElement: null,\n      documentTitle: 'Document',\n      targetStyle: ['clear', 'display', 'width', 'min-width', 'height', 'min-height', 'max-height'],\n      targetStyles: ['border', 'box', 'break', 'text-decoration'],\n      ignoreElements: [],\n      repeatTableHeader: true,\n      css: null,\n      style: null,\n      scanStyles: true,\n      base64: false,\n\n      // Deprecated\n      onPdfOpen: null,\n      font: 'TimesNewRoman',\n      font_size: '12pt',\n      honorMarginPadding: true,\n      honorColor: false,\n      imageStyle: 'max-width: 100%;'\n    }\n\n    // Check if a printable document or object was supplied\n    if (args === undefined) {\n      throw new Error('printJS expects at least 1 attribute.')\n    }\n\n    // Process parameters\n    switch (typeof args) {\n      case 'string':\n        params.printable = encodeURI(args)\n        params.fallbackPrintable = params.printable\n        params.type = (type as PrintParams['type']) || params.type\n        break\n      case 'object':\n        params.printable = (args.printable as string | HTMLElement) || null\n        params.fallbackPrintable = typeof args.fallbackPrintable !== 'undefined' ? args.fallbackPrintable : (params.printable as string)\n        params.fallbackPrintable = params.base64 ? `data:application/pdf;base64,${params.fallbackPrintable}` : params.fallbackPrintable\n\n        Object.keys(params).forEach((k) => {\n          if (k === 'printable' || k === 'fallbackPrintable') return\n\n          const key = k as keyof PrintParams\n          if (typeof args[key] !== 'undefined') {\n            (params as any)[key] = args[key]\n          }\n        })\n        break\n      default:\n        throw new Error('Unexpected argument type! Expected \"string\" or \"object\", got ' + typeof args)\n    }\n\n    // Validate printable\n    if (!params.printable) throw new Error('Missing printable information.')\n\n    // Validate type\n    if (!params.type || typeof params.type !== 'string' || printTypes.indexOf(params.type.toLowerCase() as any) === -1) {\n      throw new Error('Invalid print type. Available types are: pdf, html, image and json.')\n    }\n\n    // Check if we are showing a feedback message to the user (useful for large files)\n    if (params.showModal) Modal.show(params)\n\n    // Check for a print start hook function\n    if (params.onLoadingStart) params.onLoadingStart()\n\n    // To prevent duplication and issues, remove any used printFrame from the DOM\n    const usedFrame = document.getElementById(params.frameId)\n\n    if (usedFrame && usedFrame.parentNode) usedFrame.parentNode.removeChild(usedFrame)\n\n    // Create a new iframe for the print job\n    const printFrame = document.createElement('iframe')\n\n    if (Browser.isFirefox()) {\n      // Set the iframe to be is visible on the page (guaranteed by fixed position) but hidden using opacity 0, because\n      // this works in Firefox. The height needs to be sufficient for some part of the document other than the PDF\n      // viewer's toolbar to be visible in the page\n      printFrame.setAttribute('style', 'width: 1px; height: 100px; position: fixed; left: 0; top: 0; opacity: 0; border-width: 0; margin: 0; padding: 0')\n    } else {\n      // Hide the iframe in other browsers\n      printFrame.setAttribute('style', 'visibility: hidden; height: 0; width: 0; position: absolute; border: 0')\n    }\n\n    // Set iframe element id\n    printFrame.setAttribute('id', params.frameId)\n\n    // For non pdf printing, pass an html document string to srcdoc (force onload callback)\n    if (params.type !== 'pdf') {\n      printFrame.srcdoc = '<html><head><title>' + params.documentTitle + '</title>'\n\n      // Attach css files\n      if (params.css) {\n        // Add support for single file\n        const cssFiles = Array.isArray(params.css) ? params.css : [params.css]\n\n        // Create link tags for each css file (with validation)\n        cssFiles.forEach(file => {\n          if (isValidCssPath(file)) {\n            printFrame.srcdoc += '<link rel=\"stylesheet\" href=\"' + file + '\">'\n          } else {\n            console.warn('Print.js: Skipping invalid CSS path:', file)\n          }\n        })\n      }\n\n      printFrame.srcdoc += '</head><body></body></html>'\n    }\n\n    // Check printable type\n    switch (params.type) {\n      case 'pdf':\n        // Check browser support for pdf and if not supported we will just open the pdf file instead\n        if (Browser.isIE()) {\n          try {\n            console.info('Print.js doesn\\'t support PDF printing in Internet Explorer.')\n\n            // Validate URL before opening\n            if (params.fallbackPrintable && isSafeUrlForWindow(params.fallbackPrintable)) {\n              const win = window.open(params.fallbackPrintable, '_blank')\n              if (win) win.focus()\n            } else if (params.fallbackPrintable) {\n              throw new Error('Invalid or unsafe URL provided for fallbackPrintable')\n            }\n\n            const onIncompatible = params.onIncompatibleBrowser\n            if (onIncompatible) onIncompatible()\n          } catch (error) {\n            params.onError(error as Error)\n          } finally {\n            // Make sure there is no loading modal opened\n            if (params.showModal) Modal.close()\n            if (params.onLoadingEnd) params.onLoadingEnd()\n          }\n        } else {\n          Pdf.print(params, printFrame)\n        }\n        break\n      case 'image':\n        Image.print(params, printFrame)\n        break\n      case 'html':\n        Html.print(params, printFrame)\n        break\n      case 'raw-html':\n        RawHtml.print(params, printFrame)\n        break\n      case 'json':\n        Json.print(params, printFrame)\n        break\n    }\n  }\n}\n","import './sass/index.scss'\nimport print from './js/init'\n\nconst printJS = print.init\n\nif (typeof window !== 'undefined') {\n  window.printJS = printJS\n}\n\nexport default printJS\n"],"names":["Browser","userAgent","firefoxVersionRegex","match","x","context","Modal","params","modalStyle","printModal","contentDiv","closeButton","spinner","messageNode","capitalizePrint","obj","collectStyles","element","win","elementStyle","styles","key","targetStylesMatch","value","i","addHeader","printElement","headerContainer","isRawHTML","headerElement","headerNode","addFooter","footerContainer","footerElement","footerNode","cleanUp","event","handler","iframe","raw","Print","printFrame","iframeElement","performPrint","printDocument","style","images","loadIframeImages","error","promises","image","loadIframeImage","resolve","pollImage","ALLOWED_PROTOCOLS","isValidUrl","url","trimmedUrl","urlObj","isSafeUrlForWindow","isValidCssPath","path","trimmedPath","Pdf","printableStr","bytesArray","c","createBlobAndPrint","req","data","pdfBlob","localPdfUrl","Html","isHtmlElement","cloneElement","clone","childNodesArray","clonedChild","printable","RawHtml","Image","src","img","fullyQualifiedSrc","imageWrapper","Json","property","jsonToHTML","properties","htmlData","a","n","stringData","p","printTypes","printJS","args","type","k","usedFrame","file","onIncompatible"],"mappings":"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"}